CONNECTION0* - 	jdbc:derby:D:\walter\IdeaProjects\eazyscada\core\/mango_db
* = current connection
WARNING 01J01: Database 'D:\walter\IdeaProjects\eazyscada\core\/mango_db' not created, connection made to existing database instead.
ij> --
--    Copyright (C) 2006-2011 Serotonin Software Technologies Inc. All rights reserved.
--    @author Matthew Lohbihler
--
--
-- System settings
create table systemSettings (
  settingName varchar(64) not null,
  settingValue clob
);
0 rows inserted/updated/deleted
ij> alter table systemSettings add constraint systemSettingsPk primary key (settingName);
0 rows inserted/updated/deleted
ij> --
-- Users
create table users (
  id int not null generated by default as identity (start with 1, increment by 1),
  username varchar(40) not null,
  password varchar(30) not null,
  email varchar(255) not null,
  phone varchar(40),
  admin char(1) not null,
  disabled char(1) not null,
  lastLogin bigint,
  homeUrl varchar(255),
  receiveAlarmEmails int not null,
  receiveOwnAuditEvents char(1) not null,
  timezone varchar(50)
);
0 rows inserted/updated/deleted
ij> alter table users add constraint usersPk primary key (id);
0 rows inserted/updated/deleted
ij> create table userComments (
  userId int,
  commentType int not null,
  typeKey int not null,
  ts bigint not null,
  commentText varchar(1024) not null
);
0 rows inserted/updated/deleted
ij> alter table userComments add constraint userCommentsFk1 foreign key (userId) references users(id);
0 rows inserted/updated/deleted
ij> --
-- Mailing lists
create table mailingLists (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  name varchar(40) not null
);
0 rows inserted/updated/deleted
ij> alter table mailingLists add constraint mailingListsPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table mailingLists add constraint mailingListsUn1 unique (xid);
0 rows inserted/updated/deleted
ij> create table mailingListInactive (
  mailingListId int not null,
  inactiveInterval int not null
);
0 rows inserted/updated/deleted
ij> alter table mailingListInactive add constraint mailingListInactiveFk1 foreign key (mailingListId) 
  references mailingLists(id) on delete cascade;
0 rows inserted/updated/deleted
ij> create table mailingListMembers (
  mailingListId int not null,
  typeId int not null,
  userId int,
  address varchar(255)
);
0 rows inserted/updated/deleted
ij> alter table mailingListMembers add constraint mailingListMembersFk1 foreign key (mailingListId) 
  references mailingLists(id) on delete cascade;
0 rows inserted/updated/deleted
ij> --
--
-- Data Sources
--
create table dataSources (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  name varchar(40) not null,
  dataSourceType varchar(40) not null,
  data blob not null,
  rtdata blob
);
0 rows inserted/updated/deleted
ij> alter table dataSources add constraint dataSourcesPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table dataSources add constraint dataSourcesUn1 unique (xid);
0 rows inserted/updated/deleted
ij> -- Data source permissions
create table dataSourceUsers (
  dataSourceId int not null,
  userId int not null
);
0 rows inserted/updated/deleted
ij> alter table dataSourceUsers add constraint dataSourceUsersFk1 foreign key (dataSourceId) references dataSources(id);
0 rows inserted/updated/deleted
ij> alter table dataSourceUsers add constraint dataSourceUsersFk2 foreign key (userId) references users(id) on delete cascade;
0 rows inserted/updated/deleted
ij> --
--
-- Data Points
--
create table dataPoints (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  dataSourceId int not null,
  name varchar(255),
  deviceName varchar(255),
  enabled char(1),
  pointFolderId int,
  loggingType int,
  intervalLoggingPeriodType int,
  intervalLoggingPeriod int,
  intervalLoggingType int,
  tolerance double,
  purgeOverride char(1),
  purgeType int,
  purgePeriod int,
  defaultCacheSize int,
  discardExtremeValues char(1),
  engineeringUnits int,
  data blob not null
);
0 rows inserted/updated/deleted
ij> alter table dataPoints add constraint dataPointsPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table dataPoints add constraint dataPointsUn1 unique (xid);
0 rows inserted/updated/deleted
ij> alter table dataPoints add constraint dataPointsFk1 foreign key (dataSourceId) references dataSources(id);
0 rows inserted/updated/deleted
ij> -- Data point hierarchy
CREATE TABLE dataPointHierarchy (
  id int NOT NULL,
  parentId int,
  name varchar(100)
);
0 rows inserted/updated/deleted
ij> ALTER TABLE dataPointHierarchy ADD CONSTRAINT dataPointHierarchyPk PRIMARY KEY (id);
0 rows inserted/updated/deleted
ij> -- Data point permissions
create table dataPointUsers (
  dataPointId int not null,
  userId int not null,
  permission int not null
);
0 rows inserted/updated/deleted
ij> alter table dataPointUsers add constraint dataPointUsersFk1 foreign key (dataPointId) references dataPoints(id);
0 rows inserted/updated/deleted
ij> alter table dataPointUsers add constraint dataPointUsersFk2 foreign key (userId) references users(id) on delete cascade;
0 rows inserted/updated/deleted
ij> --
--
-- Point Values (historical data)
--
create table pointValues (
  id bigint not null generated by default as identity (start with 1, increment by 1),
  dataPointId int not null,
  dataType int not null,
  pointValue double,
  ts bigint not null
);
0 rows inserted/updated/deleted
ij> alter table pointValues add constraint pointValuesPk primary key (id);
0 rows inserted/updated/deleted
ij> create index pointValuesIdx1 on pointValues (dataPointId, ts);
0 rows inserted/updated/deleted
ij> create table pointValueAnnotations (
  pointValueId bigint not null,
  textPointValueShort varchar(128),
  textPointValueLong clob,
  sourceMessage clob
);
0 rows inserted/updated/deleted
ij> alter table pointValueAnnotations add constraint pointValueAnnotationsPk primary key (pointValueId);
0 rows inserted/updated/deleted
ij> --
--
-- Point event detectors
--
create table pointEventDetectors (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  alias varchar(255),
  dataPointId int not null,
  detectorType int not null,
  alarmLevel int not null,
  stateLimit double,
  duration int,
  durationType int,
  binaryState char(1),
  multistateState int,
  changeCount int,
  alphanumericState varchar(128),
  weight double
);
0 rows inserted/updated/deleted
ij> alter table pointEventDetectors add constraint pointEventDetectorsPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table pointEventDetectors add constraint pointEventDetectorsUn1 unique (xid, dataPointId);
0 rows inserted/updated/deleted
ij> alter table pointEventDetectors add constraint pointEventDetectorsFk1 foreign key (dataPointId) 
  references dataPoints(id);
0 rows inserted/updated/deleted
ij> --
--
-- Events
--
create table events (
  id int not null generated by default as identity (start with 1, increment by 1),
  typeName varchar(32) not null,
  subtypeName varchar(32),
  typeRef1 int not null,
  typeRef2 int not null,
  activeTs bigint not null,
  rtnApplicable char(1) not null,
  rtnTs bigint,
  rtnCause int,
  alarmLevel int not null,
  message clob,
  ackTs bigint,
  ackUserId int,
  alternateAckSource clob
);
0 rows inserted/updated/deleted
ij> alter table events add constraint eventsPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table events add constraint eventsFk1 foreign key (ackUserId) references users(id);
0 rows inserted/updated/deleted
ij> create table userEvents (
  eventId int not null,
  userId int not null,
  silenced char(1) not null
);
0 rows inserted/updated/deleted
ij> alter table userEvents add constraint userEventsPk primary key (eventId, userId);
0 rows inserted/updated/deleted
ij> alter table userEvents add constraint userEventsFk1 foreign key (eventId) references events(id) on delete cascade;
0 rows inserted/updated/deleted
ij> alter table userEvents add constraint userEventsFk2 foreign key (userId) references users(id);
0 rows inserted/updated/deleted
ij> --
--
-- Event handlers
--
create table eventHandlers (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  alias varchar(255),
  
  -- Event type, see events
  eventTypeName varchar(32) not null,
  eventSubtypeName varchar(32),
  eventTypeRef1 int not null,
  eventTypeRef2 int not null,
  
  data blob not null
);
0 rows inserted/updated/deleted
ij> alter table eventHandlers add constraint eventHandlersPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table eventHandlers add constraint eventHandlersUn1 unique (xid);
0 rows inserted/updated/deleted
ij> --
--
-- Publishers
--
create table publishers (
  id int not null generated by default as identity (start with 1, increment by 1),
  xid varchar(50) not null,
  publisherType varchar(40) not null,
  data blob not null,
  rtdata blob
);
0 rows inserted/updated/deleted
ij> alter table publishers add constraint publishersPk primary key (id);
0 rows inserted/updated/deleted
ij> alter table publishers add constraint publishersUn1 unique (xid);
0 rows inserted/updated/deleted
ij> 